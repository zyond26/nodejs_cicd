import React, { useState } from 'react';
import { View, Text, TouchableOpacity, ScrollView, StyleSheet, Dimensions } from 'react-native';
import { SafeAreaView } from 'react-native-safe-area-context';

const tabs = ['ƒêang ƒë·∫øn', 'Deal ƒë√£ mua', 'L·ªãch s·ª≠', 'ƒê√°nh gi√°', 'ƒê∆°n nh√°p'];

const OrdersScreen = () => {
  const [activeTab, setActiveTab] = useState('ƒêang ƒë·∫øn');

  const renderContent = () => {
    switch (activeTab) {
      case 'ƒêang ƒë·∫øn':
        return (
          <View style={styles.contentContainer}>
            <Text style={styles.title}>Qu√™n ch∆∞a ƒë·∫∑t m√≥n r·ªìi n√® b·∫°n ∆°i?</Text>
            <Text style={styles.description}>
              B·∫°n s·∫Ω nh√¨n th·∫•y c√°c m√≥n ƒëang ƒë∆∞·ª£c chu·∫©n b·ªã ho·∫∑c giao ƒëi t·∫°i ƒë√¢y ƒë·ªÉ ki·ªÉm tra ƒë∆°n h√†ng nhanh h∆°n!
            </Text>
            <Text style={styles.suggestionTitle}>C√≥ th·ªÉ b·∫°n c≈©ng th√≠ch</Text>
            <View style={styles.card}>
              <Text style={styles.shopName}>üõçÔ∏è Xu√¢n Food - M√¨ Tr·ªôn Indomie - VƒÉn Ph√∫</Text>
              <Text style={styles.shopInfo}>‚≠ê 4.7 | 0.4km | 30 ph√∫t</Text>
              <Text style={styles.promos}>Gi·∫£m m√≥n, T·∫∑ng 1 qu√† t·∫∑ng, M√£ gi·∫£m 16k</Text>
            </View>
            <View style={styles.card}>
              <Text style={styles.shopName}>‚ù§Ô∏è Gong Ju - Kimbap & M√≥n H√†n - H√† ƒê√¥ng</Text>
              <Text style={styles.shopInfo}>‚≠ê 4.6 | 1.1km | 37 ph√∫t</Text>
              <Text style={styles.promos}>M√£ gi·∫£m 20%</Text>
            </View>
          </View>
        );
      case 'Deal ƒë√£ mua':
        return (
          <View style={styles.contentContainer}>
            <Text style={styles.title}>Ch∆∞a c√≥ Deal n√†o</Text>
          </View>
        );
      case 'L·ªãch s·ª≠':
        return (
          <View style={styles.contentContainer}>
            <Text style={styles.description}>B·∫°n s·∫Ω nh√¨n th·∫•y c√°c m√≥n ƒë√£ ƒë·∫∑t t·∫°i ƒë√¢y ƒë·ªÉ c√≥ th·ªÉ th∆∞·ªüng th·ª©c l·∫°i m√≥n y√™u th√≠ch b·∫•t c·ª© l√∫c n√†o!</Text>
          </View>
        );
      case 'ƒê√°nh gi√°':
        return (
          <View style={styles.contentContainer}>
            <Text style={styles.title}>Ch∆∞a c√≥ ƒë∆°n ƒë·ªÉ ƒë√°nh gi√°</Text>
            <Text style={styles.description}>ƒê·∫∑t m√≥n ngay ƒë·ªÉ th√™m ƒë√°nh gi√° m·ªõi b·∫°n nh√©!</Text>
          </View>
        );
      case 'ƒê∆°n nh√°p':
        return (
          <View style={styles.contentContainer}>
            <Text style={styles.title}>"H√¥ng" c√≥ g√¨ trong gi·ªè h·∫øt! ƒê√≥i qu√° √†!</Text>
            <Text style={styles.description}>Nhanh nhanh ƒë·∫∑t m√≥n ngon t·ª•i m√¨nh c√πng mƒÉm n√†o!</Text>
          </View>
        );
      default:
        return null;
    }
  };

  return (
    <SafeAreaView style={styles.container}>
      <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.tabBar}>
        {tabs.map(tab => (
          <TouchableOpacity
            key={tab}
            style={[styles.tabItem, activeTab === tab && styles.activeTab]}
            onPress={() => setActiveTab(tab)}
          >
            <Text style={[styles.tabText, activeTab === tab && styles.activeTabText]}>{tab}</Text>
          </TouchableOpacity>
        ))}
      </ScrollView>
      <ScrollView contentContainerStyle={{ flexGrow: 1 }}>{renderContent()}</ScrollView>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
  },
  tabBar: {
    flexDirection: 'row',
    borderBottomWidth: 1,
    borderBottomColor: '#eee',
  },
  tabItem: {
    paddingVertical: 12,
    paddingHorizontal: 20,
  },
  tabText: {
    fontSize: 16,
    color: '#888',
  },
  activeTab: {
    borderBottomWidth: 2,
    borderBottomColor: '#f33',
  },
  activeTabText: {
    color: '#f33',
    fontWeight: 'bold',
  },
  contentContainer: {
    padding: 16,
  },
  title: {
    fontSize: 18,
    fontWeight: '600',
    textAlign: 'center',
    marginBottom: 10,
    color: '#333',
  },
  description: {
    fontSize: 14,
    textAlign: 'center',
    color: '#666',
    marginBottom: 20,
  },
  suggestionTitle: {
    fontSize: 16,
    fontWeight: '500',
    marginBottom: 8,
    color: '#333',
  },
  card: {
    padding: 12,
    borderRadius: 8,
    backgroundColor: '#fafafa',
    marginBottom: 12,
    borderWidth: 1,
    borderColor: '#eee',
  },
  shopName: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#333',
  },
  shopInfo: {
    fontSize: 14,
    color: '#666',
    marginVertical: 4,
  },
  promos: {
    fontSize: 13,
    color: '#f33',
  },
});

export default OrdersScreen;